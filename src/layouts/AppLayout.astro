---
import { author } from "@data/socials";
import "@fontsource-variable/inter";
import "@styles/global.css";
import Header from "@components/Header.astro";
import GTMAstro from "@components/GTMAstro.astro";
import Footer from "@components/Footer.astro";
import { ClientRouter } from "astro:transitions";

interface Props {
  title?: string;
  description?: string;
  ogImage?: {
    src: string;
    alt: string;
  };
  pubDate?: Date;
  tags?: string[];
  lastmod?: Date;
}

const { title, description = "", pubDate, tags = [], lastmod } = Astro.props;

const canonicalURL = new URL(Astro.url).href;
const date = pubDate || lastmod || new Date();
---

<!doctype html>
<html
  lang="en"
  class="overflow-x-hidden break-words text-zinc-900 dark:text-zinc-100 dark"
  transition:name="root"
  transition:animate="none"
>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>{title}</title>
    <link rel="icon" href={import.meta.env.BASE_URL + "/favicon.ico"} />
    <link rel="canonical" href={canonicalURL} />
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta property="og:type" content="blog" />
    <meta name="theme-color" content="#60A5FA" />
    <meta name="msapplication-TileColor" content="#60A5FA" />
    <meta name="color-scheme" content="light dark" />
    <meta name="apple-mobile-web-app-title" content={title} />
    <meta name="application-name" content={title} />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="follow, index" />
    <link rel="manifest" href={import.meta.env.BASE_URL + "/manifest.json"} />
    {tags && tags.map((tag) => <meta property="article:tag" content={tag} />)}
    <meta name="author" content={author} />
    <meta
      name="pubdate"
      content={pubDate
        ? pubDate.toISOString()
        : "Fri Oct 20 2023 03:00:00 GMT+0300 (Eastern European Summer Time)"}
    />
    <meta name="date" content={date.toISOString()} />
    <meta name="keywords" content={tags.join(", ")} />

    <ClientRouter />
    <GTMAstro />

    <script is:inline>
      const handleClick = () => {
        const theme = (() => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
          }
          return "light";
        })();

        if (theme === "light") {
          document.documentElement.classList.remove("dark");
        } else {
          document.documentElement.classList.add("dark");
        }
        window.localStorage.setItem("theme", theme);
      };
    </script>
  </head>
  <body
    class="dark:bg-zinc-900 bg-zinc-100 antialiased selection:bg-blue-300 selection:text-zinc-900 dark:selection:bg-blue-600 dark:selection:text-white 2xl:text-lg"
  >
    <Header />
    <button onclick="handleClick">bang</button>
    <main
      class="px-6 lg:px-0 mx-auto max-w-5xl flex flex-col min-h-screen py-6"
      id="main-content"
      transition:animate="slide"
    >
      <slot />
    </main>
    <Footer />
  </body>
</html>
